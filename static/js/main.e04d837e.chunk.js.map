{"version":3,"sources":["components/GithubRibbon.js","App.js","index.js"],"names":["GithubRibbon","className","href","App","useState","number","setNumber","addToDisplay","n","console","log","handleKeydown","e","key","keyCode","handleEqual","target","value","validateAndUpdate","match","math","useEffect","window","addEventListener","removeEventListener","id","type","name","onClick","onChange","onKeyPress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAEe,SAASA,IACtB,OACE,yBAAKC,UAAU,wBACb,yBAAKA,UAAU,qCACb,8BACE,uBAAGC,KAAK,0CAAR,aC0IKC,MA3If,WAAgB,IAAD,EACeC,mBAAS,KADxB,mBACNC,EADM,KACEC,EADF,KAGb,SAASC,EAAaC,GACpBC,QAAQC,IAAIL,GACKC,EAAN,MAAXD,EAA2BG,EAAeH,EAASG,GAGrD,SAASG,EAAeC,GACR,MAAVA,EAAEC,IACJP,EAAU,IAEW,KAAdM,EAAEE,SACTC,EAAYH,EAAEI,OAAOC,OAASZ,GAKlC,SAASa,EAAmBD,GACrBA,EAAME,MAAM,gBAIfV,QAAQC,IAAIO,IAHZX,EAAUW,GACVR,QAAQC,IAAI,UAMhB,SAASK,EAAYP,GACnBF,EAAUc,IAAcZ,IAU1B,OAPAa,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWZ,GAC5B,WACLW,OAAOE,oBAAoB,UAAWb,OAKxC,yBAAKV,UAAU,OACb,0CACA,qEACA,4BACE,uDACA,8CACA,uDAEF,yBAAKwB,GAAG,cACN,2BACEC,KAAK,OACLC,KAAK,UACLF,GAAG,UACHR,MAAOZ,EACPuB,QAAS,iBAAiB,MAAXvB,GAAkBC,EAAU,KAC3CuB,SAAU,SAACjB,GAAD,OAAOM,EAAkBN,EAAEI,OAAOC,QAC5Ca,WAAY,SAAClB,GAAD,OAAOM,EAAkBN,EAAEI,OAAOC,UAGhD,yBAAKhB,UAAU,OACb,yBAAKA,UAAU,MAAMwB,GAAG,QAAQG,QAAS,kBAAMrB,EAAa,OAA5D,KAGA,yBAAKN,UAAU,MAAMwB,GAAG,QAAQG,QAAS,kBAAMrB,EAAa,OAA5D,KAGA,yBAAKN,UAAU,MAAMwB,GAAG,OAAOG,QAAS,kBAAMrB,EAAa,OAA3D,KAGA,yBACEN,UAAU,MACVwB,GAAG,SACHG,QAAS,kBAAMrB,EAAa,OAH9B,SASF,yBAAKN,UAAU,OACb,yBAAKA,UAAU,MAAM2B,QAAS,kBAAMrB,EAAa,OAAjD,KAGA,yBAAKN,UAAU,MAAM2B,QAAS,kBAAMrB,EAAa,OAAjD,KAGA,yBAAKN,UAAU,MAAM2B,QAAS,kBAAMrB,EAAa,OAAjD,KAGA,yBACEN,UAAU,MACVwB,GAAG,WACHG,QAAS,kBAAMrB,EAAa,OAH9B,MASF,yBAAKN,UAAU,OACb,yBAAKA,UAAU,MAAM2B,QAAS,kBAAMrB,EAAa,OAAjD,KAGA,yBAAKN,UAAU,MAAM2B,QAAS,kBAAMrB,EAAa,OAAjD,KAGA,yBAAKN,UAAU,MAAM2B,QAAS,kBAAMrB,EAAa,OAAjD,KAGA,yBAAKN,UAAU,MAAMwB,GAAG,MAAMG,QAAS,kBAAMrB,EAAa,OAA1D,MAKF,yBAAKN,UAAU,OACb,yBAAKA,UAAU,MAAM2B,QAAS,kBAAMrB,EAAa,OAAjD,KAGA,yBAAKN,UAAU,MAAM2B,QAAS,kBAAMrB,EAAa,OAAjD,KAGA,yBAAKN,UAAU,MAAM2B,QAAS,kBAAMb,EAAYV,KAAhD,KAGA,yBACEJ,UAAU,MACVwB,GAAG,WACHG,QAAS,kBAAMrB,EAAa,OAH9B,MASF,yBAAKkB,GAAG,QAAQG,QAAS,kBAAMtB,EAAU,OAAzC,UAIF,kBAACN,EAAD,QCvIN+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e04d837e.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function GithubRibbon() {\n  return (\n    <div className=\"tsc_ribbon_wrap edge\">\n      <div className=\"ribbon-wrap right-edge fork lblue\">\n        <span>\n          <a href=\"https://github.com/lokutech/calculator\">Github</a>\n        </span>\n      </div>\n    </div>\n  )\n}\n\n","import React, { useState, useEffect } from 'react'\nimport * as math from 'mathjs'\nimport './App.css'\nimport  GithubRibbon from './components/GithubRibbon'\n\n\nfunction App() {\n  const [number, setNumber] = useState('0')\n\n  function addToDisplay(n) {\n    console.log(number);\n    number === '0' ? setNumber(n) : setNumber(number + n)\n  }\n\n  function handleKeydown (e) {\n    if (e.key === 'c'){\n      setNumber(\"\")\n    } \n    else if (e.keyCode === 13){\n      handleEqual(e.target.value || number)\n    }\n}\n\n  // Checks to make sure only numbers and '.' are allowed.\n  function validateAndUpdate (value) {\n    if (!value.match(/[^0-9.+-/*]/g)){\n      setNumber(value)\n      console.log('match');\n    } else {\n      console.log(value)\n    }\n  }\n\n  function handleEqual(n) {\n    setNumber(math.evaluate(n))\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n    }\n  })\n\n  return (\n    <div className=\"App\">\n      <h1>Calculator</h1>\n      <p>A simple calculator built with ReactJS</p>\n      <ul>\n        <li>Use the keypad or click</li>\n        <li>Use C to clear</li>\n        <li>Use Enter to calculate</li>\n      </ul>\n      <div id=\"calculator\">\n        <input\n          type=\"text\"\n          name=\"display\"\n          id=\"display\"\n          value={number}\n          onClick={() => number === '0' && setNumber('')}\n          onChange={(e) => validateAndUpdate(e.target.value)}\n          onKeyPress={(e) => validateAndUpdate(e.target.value)}\n        ></input>\n        {/* Row 1 */}\n        <div className=\"row\">\n          <div className=\"key\" id=\"seven\" onClick={() => addToDisplay('7')}>\n            7\n          </div>\n          <div className=\"key\" id=\"eight\" onClick={() => addToDisplay('8')}>\n            8\n          </div>\n          <div className=\"key\" id=\"nine\" onClick={() => addToDisplay('9')}>\n            9\n          </div>\n          <div\n            className=\"key\"\n            id=\"divide\"\n            onClick={() => addToDisplay('/')}\n          >\n            รท\n          </div>\n        </div>\n        {/* Row 2 */}\n        <div className=\"row\">\n          <div className=\"key\" onClick={() => addToDisplay('4')}>\n            4\n          </div>\n          <div className=\"key\" onClick={() => addToDisplay('5')}>\n            5\n          </div>\n          <div className=\"key\" onClick={() => addToDisplay('6')}>\n            6\n          </div>\n          <div\n            className=\"key\"\n            id=\"multiply\"\n            onClick={() => addToDisplay('*')}\n          >\n            x\n          </div>\n        </div>\n        {/* Row 3 */}\n        <div className=\"row\">\n          <div className=\"key\" onClick={() => addToDisplay('1')}>\n            1\n          </div>\n          <div className=\"key\" onClick={() => addToDisplay('2')}>\n            2\n          </div>\n          <div className=\"key\" onClick={() => addToDisplay('3')}>\n            3\n          </div>\n          <div className=\"key\" id=\"add\" onClick={() => addToDisplay('+')}>\n            +\n          </div>\n        </div>\n        {/* Row 4 */}\n        <div className=\"row\">\n          <div className=\"key\" onClick={() => addToDisplay('.')}>\n            .\n          </div>\n          <div className=\"key\" onClick={() => addToDisplay('0')}>\n            0\n          </div>\n          <div className=\"key\" onClick={() => handleEqual(number)}>\n            =\n          </div>\n          <div\n            className=\"key\"\n            id=\"subtract\"\n            onClick={() => addToDisplay('-')}\n          >\n            -\n          </div>\n        </div>\n        {/* Row 5 */}\n        <div id='clear' onClick={() => setNumber(\"0\")}>\n          Clear\n        </div>\n      </div>\n      <GithubRibbon />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}